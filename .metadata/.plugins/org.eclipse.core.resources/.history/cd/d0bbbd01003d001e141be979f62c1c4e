package ExcelManipulationUsingApachePOI;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Iterator;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.testng.annotations.Test;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;

public class NewTest {
	
	String _filePath = "C:\\Users\\luckr\\OneDrive\\Desktop\\Selenium_Topics\\MavenDemo29\\src\\test\\java\\Resource";
	String _fileName = "TestData.xlsx";
	String _sheetName = "TestData";
	
	
  @Test
  public void readTestData() throws Exception {
	  readExcelFile(_filePath, _fileName, _sheetName);
  }
  
  public void readExcelFile(String filePath, String fileName, String sheetName) throws Exception {
	  File file = new File(filePath+ "\\"+ fileName);
	  FileInputStream fin = new FileInputStream(file);
	  
	  Workbook workbook = null;
	  
	  String fileExtensionName = fileName.substring(fileName.indexOf("."));
	  
	  if(fileExtensionName.equals(".xlsx")) {
		  workbook = new XSSFWorkbook(fin);
		  
	  }
	  else if(fileExtensionName.equals("xls")) {
		  workbook = new HSSFWorkbook(fin);
		  
	  }
	  
//	 
	  Sheet sheet = workbook.getSheet(sheetName);
	  
	  int rowCount = sheet.getLastRowNum() - sheet.getFirstRowNum();
	  
	  int numberOfCell = 0;
	  
	  Iterator rowIterator = sheet.iterator();
	  Row headerRow = (Row) rowIterator.next();
	  
	  numberOfCell = headerRow.getPhysicalNumberOfCells();
	  
	  for(int i=0; i<rowCount+1; i++ ) {
		  
		  Row row = sheet.getRow(i);
		  
	

		  // ...

		  for (int i = 0; i < rowCount + 1; i++) {
		      Row row = sheet.getRow(i);

		      for (int j = 0; j < row.getLastCellNum(); j++) {
		          Cell cell = row.getCell(j);

		          if (cell.getCellType() == CellType.STRING) {
		              System.out.println("Value = " + cell.getStringCellValue());
		          } else if (cell.getCellType() == CellType.NUMERIC) {
		              System.out.println("Value = " + cell.getNumericCellValue());
		          } else {
		              // Handle other cell types as needed
		              System.out.println("Unsupported cell type");
		          }
		      }
		  }

	  }
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
  }
}
